// Virtual Key Codes mapping based on https://cherrytree.at/misc/vk.htm
// For performance, a reverse map is created to avoid using Object.entries and find on each call.
export const VK_CODES: Record<number, string> = {
  1: "Left Mouse",
  2: "Right Mouse",
  3: "Control-break",
  4: "Middle Mouse",
  5: "X1 Mouse",
  6: "X2 Mouse",
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Ctrl",
  18: "Alt",
  19: "Pause",
  20: "Caps Lock",
  21: "IME Kana",
  23: "IME Junja",
  24: "IME Final",
  25: "IME Hanja",
  27: "Escape",
  28: "IME Convert",
  29: "IME Nonconvert",
  30: "IME Accept",
  31: "IME Mode Change",
  32: "Spacebar",
  33: "Page Up",
  34: "Page Down",
  35: "End",
  36: "Home",
  37: "Left Arrow",
  38: "Up Arrow",
  39: "Right Arrow",
  40: "Down Arrow",
  41: "Select",
  42: "Print",
  43: "Execute",
  44: "Print Screen",
  45: "Insert",
  46: "Delete",
  47: "Help",
  48: "0",
  49: "1",
  50: "2",
  51: "3",
  52: "4",
  53: "5",
  54: "6",
  55: "7",
  56: "8",
  57: "9",
  65: "A",
  66: "B",
  67: "C",
  68: "D",
  69: "E",
  70: "F",
  71: "G",
  72: "H",
  73: "I",
  74: "J",
  75: "K",
  76: "L",
  77: "M",
  78: "N",
  79: "O",
  80: "P",
  81: "Q",
  82: "R",
  83: "S",
  84: "T",
  85: "U",
  86: "V",
  87: "W",
  88: "X",
  89: "Y",
  90: "Z",
  91: "Left Windows",
  92: "Right Windows",
  93: "Applications",
  95: "Sleep",
  96: "Numpad 0",
  97: "Numpad 1",
  98: "Numpad 2",
  99: "Numpad 3",
  100: "Numpad 4",
  101: "Numpad 5",
  102: "Numpad 6",
  103: "Numpad 7",
  104: "Numpad 8",
  105: "Numpad 9",
  106: "Numpad *",
  107: "Numpad +",
  108: "Separator",
  109: "Numpad -",
  110: "Numpad .",
  111: "Numpad /",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  124: "F13",
  125: "F14",
  126: "F15",
  127: "F16",
  128: "F17",
  129: "F18",
  130: "F19",
  131: "F20",
  132: "F21",
  133: "F22",
  134: "F23",
  135: "F24",
  144: "Num Lock",
  145: "Scroll Lock",
  160: "Left Shift",
  161: "Right Shift",
  162: "Left Ctrl",
  163: "Right Ctrl",
  164: "Left Alt",
  165: "Right Alt",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  220: "\\",
  221: "]",
  222: "'",
};

const KEY_CODES: Record<string, number> = Object.fromEntries(
  Object.entries(VK_CODES).map(([code, name]) => [name, parseInt(code, 10)])
);

export function getKeyName(keyCode?: number): string {
  // Handles undefined, null, and 0 values for keyCode.
  if (keyCode === undefined || keyCode === null) return "Not set";
  if (keyCode === 0) return "None";
  return VK_CODES[keyCode] || `Key ${keyCode}`;
}

export function getKeyCode(keyName: string): number | undefined {
  return KEY_CODES[keyName];
}